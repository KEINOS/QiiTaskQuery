# =============================================================================
#  Workflow to validate JSON with JSON schema
# =============================================================================
name: IsValidJSON

on: [push, pull_request]

env:
  PATH_CACHE: /tmp/docker-img-arch

jobs:
  validation:
    name: Run tests in scontainer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Create Docker image tag
        id: imgtag
        run: |
          : # Update image on Dockerfile or month change
          HASH_IMAGE=${{ hashFiles('./.github/Dockerfile') }}
          VARIANT=$(TZ=UTC-9 date '+%Y%m')
          TAG="${HASH_IMAGE:0:7}:${VARIANT}"
          PATH_TAR=${{ env.PATH_CACHE }}"/tar"
          echo "::set-output name=TAG::${TAG}"
          echo "::set-output name=PATH_TAR::${PATH_TAR}"

      - name: Enable Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.PATH_CACHE }}
          key: ${{ steps.imgtag.outputs.TAG }}

      - name: Load Docker images if exist
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          docker load --input ${{ steps.imgtag.outputs.PATH_TAR }}/qiitaskquery_validator.tar

      - name: Build Docker image if no-exists
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ steps.imgtag.outputs.PATH_TAR }}
          : # Build container image
          docker-compose build

      - name: Save built images if no-exists
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          docker save --output ${{ steps.imgtag.outputs.PATH_TAR }}/qiitaskquery_validator.tar qiitaskquery_validator:latest

      - name: Run validator
        run: docker-compose run validator ./query.schema.json ./query.json

      - name: Update README
        run: |
          docker-compose run gendoc
          git add .
          git commit -m "docs: update README" || echo 'done'